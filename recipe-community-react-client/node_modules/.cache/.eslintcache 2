[{"/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/index.js":"1","/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/reportWebVitals.js":"2","/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/App.js":"3","/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/components/search.js":"4","/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/components/details.js":"5","/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/services/recipe-service.js":"6"},{"size":544,"mtime":1616437094225,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1616437094225,"results":"9","hashOfConfig":"8"},{"size":1472,"mtime":1616458087938,"results":"10","hashOfConfig":"8"},{"size":1589,"mtime":1616458087940,"results":"11","hashOfConfig":"8"},{"size":1594,"mtime":1616458087939,"results":"12","hashOfConfig":"8"},{"size":892,"mtime":1616515800649,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"85ei7v",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/index.js",[],["30","31"],"/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/reportWebVitals.js",[],"/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/App.js",["32","33","34"],"import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Search from './components/search';\nimport Details from \"./components/details\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">Recipe Community</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                data-target=\"#navbarNavAltMarkup\"\n                aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <div className=\"navbar-nav\">\n            <a className=\"nav-item nav-link\" href=\"#\">Home <span\n                className=\"sr-only\"></span></a>\n            <a className=\"nav-item nav-link\" href=\"/search\">Search</a>\n          </div>\n        </div>\n      </nav>\n      <BrowserRouter>\n        <Route\n          exact={true}\n          path={[\"/\"]}>\n\n        </Route>\n        <Route\n          exact={true}\n          path={[\"/search\", \"/search/:recipeName\"]}>\n          <Search/>\n        </Route>\n        <Route\n          exact={true}\n          path={[\"/details/:recipeId\"]}>\n          <Details/>\n        </Route>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/components/search.js",["35"],"import React, {useState, useEffect} from 'react'\nimport {Link, useParams, useHistory} from 'react-router-dom'\nimport RecipeService from '../services/recipe-service'\n\nconst Search = () => {\n  const {recipeName} = useParams()\n  const [searchRecipe, setSearchRecipe] = useState(\"\")\n  const [results, setResults] = useState([])\n  const history = useHistory()\n  useEffect(() => {\n    setSearchRecipe(recipeName)\n    if(recipeName) {\n      RecipeService.findRecipeByName(recipeName)\n        .then(response => {\n          console.log(response)\n          return setResults(response)\n        })\n    }\n    console.log(results)\n  },[recipeName])\n\n  return (\n      <div className=\"container\">\n        <h1>\n          Find a recipe\n        </h1>\n        <input\n          onChange={(e) => {\n            setSearchRecipe(e.target.value)\n          }}\n          className=\"form-control\"\n          value={searchRecipe}\n        />\n        <button\n          onClick={() => {\n            if(searchRecipe) {\n              history.push(`/search/${searchRecipe}`)\n            } else {\n              history.push(`/search`)\n            }\n          }}\n          className=\"btn btn-primary\">\n          Search\n        </button>\n        <ul className=\"list-group\">\n\n          {\n            results.length > 0 &&\n            results.map(recipe =>\n              <li className=\"list-group-item\" key={recipe.id}>\n                <Link to={`/details/${recipe.id}`}>\n                  {recipe.title}\n                </Link>\n              </li>\n            )\n          }\n        </ul>\n\n      </div>\n  )\n}\n\nexport default Search","/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/components/details.js",["36"],"import React, {useState, useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\nimport RecipeService from '../services/recipe-service'\n\nconst Details = () => {\n  const [recipe, setRecipe] = useState({})\n  const {recipeId} = useParams()\n  useEffect(() => {\n    RecipeService.findRecipeInformationById(recipeId)\n      .then(response => {\n        setRecipe(response)\n        console.log(response)\n      })\n  }, [recipeId])\n  return (\n      <div className=\"container\">\n        <h1>{recipe.title}</h1>\n        <img src={recipe.image}/>\n        <h4>Information:</h4>\n        <div>\n          <ul>\n            <li>Ready in <b>{recipe.readyInMinutes}</b> minutes</li>\n            <li>Serves <b>{recipe.servings}</b></li>\n          </ul>\n        </div>\n        <h4>Ingredients: </h4>\n\n        <ul className=\"list-group\">\n        {\n          recipe.extendedIngredients &&\n          recipe.extendedIngredients.map(ingredient =>\n              <li className=\"list-group-item\" key={ingredient.id}>\n                {ingredient.original}\n              </li>\n              )\n        }\n        </ul>\n        <br/>\n        <h4>Steps:</h4>\n        <ul className=\"list-group\">\n          {\n            recipe &&\n            recipe.analyzedInstructions &&\n            recipe.analyzedInstructions[0].steps &&\n            recipe.analyzedInstructions[0].steps.map(instruction =>\n                <li className=\"list-group-item\" key={instruction.number}>\n                  {instruction.step}\n                </li>\n            )\n          }\n        </ul>\n        <br/>\n      </div>\n  )\n\n}\n\nexport default Details","/Users/nikhilbolar/Documents/Northeastern/CS 5610/recipe-community/src/services/recipe-service.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"46","line":11,"column":9,"nodeType":"47","endLine":11,"endColumn":46},{"ruleId":"45","severity":1,"message":"46","line":20,"column":13,"nodeType":"47","endLine":20,"endColumn":55},{"ruleId":"48","severity":1,"message":"49","line":20,"column":5,"nodeType":"50","endLine":20,"endColumn":17,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":18,"column":9,"nodeType":"47","endLine":18,"endColumn":34},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'results'. Either include it or remove the dependency array.","ArrayExpression",["56"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [recipeName, results]",{"range":"59","text":"60"},[621,633],"[recipeName, results]"]